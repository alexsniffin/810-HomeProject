{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/home.js","src/modules/list.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/galleries.js","src/resources/data/users.js","src/resources/value-converters/completed.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Home","users","message","loginError","showLogin","login","email","password","sessionStorage","setItem","JSON","stringify","response","user","navigate","catch","console","log","error","showRegister","firstName","lastName","registerError","save","serverResponse","List","galleries","currentGallery","undefined","apiUrl","parse","getItem","showList","showCompleted","files","priorities","logout","removeItem","activate","getUserGalleries","_id","toggleShowCompleted","createGallery","galleryObj","dateCreated","Date","back","editGallery","gallery","deleteGallery","completeGallery","completed","saveGallery","changeFiles","filesToUpload","Array","picture","push","removeFile","index","splice","showGallery","file","alert","galleryId","length","uploadFile","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","Galleries","GALLERIES_SERVICE","galleriesArray","id","i","userId","formData","FormData","forEach","item","append","Users","USER_SERVICE","CompletedValueConverter","toView","array","value","filter"],"mappings":";;;;;;;;;;;;;;MAEaA,cAAAA;;;;;kBACXC,2CAAgBC,QAAQC,QAAQ;AAC9B,WAAKA,MAAL,GAAcA,MAAd;AACAD,aAAOE,eAAP,CAAuB,WAAvB;AACAF,aAAOG,GAAP,CAAW,CACT;AACEC,eAAO,CAAC,EAAD,EAAK,MAAL,CADT;AAEEC,kBAAU,gBAFZ;AAGEC,cAAM;AAHR,OADS,EAMT;AACEF,eAAO,MADT;AAEEC,kBAAU,gBAFZ;AAGEC,cAAM,MAHR;AAIEC,cAAM;AAJR,OANS,CAAX;AAaD;;;;;;;;;;;ACnBH,MAAIC,aAAa;AACfC,aAAS,2BADM;AAEfC,cAAU,cAFK;AAGfC,eAAW,OAHI;AAIfC,gBAAY,eAJG;AAKfC,eAAW,EALI;AAMfC,oBAAgB;AAND,GAAjB;;oBASeN;;;;;;;;oBCTA;AACbO,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCC,YAAAA;;;;;;;;;;;;;;AANhBC,SAAOC,kBAAP;;AAIAC,UAAQpB,MAAR,CAAe,EAAGqB,UAAU,EAAKC,kBAAkB,KAAvB,EAAb,EAAf;;AAEO,WAASL,SAAT,CAAmBM,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,MAFH,CAEU,cAFV,EAE0B,UAACC,UAAD,EAAc;AACpCA,iBAAWV,SAAX;AACD,KAJH,EAKGW,OALH,CAKW,WALX;;AAOA,QAAI,sBAAYb,KAAhB,EAAuB;AACrBQ,cAAQC,GAAR,CAAYK,kBAAZ;AACD;;AAED,QAAI,sBAAYb,OAAhB,EAAyB;AACvBO,cAAQC,GAAR,CAAYE,MAAZ,CAAmB,iBAAnB;AACD;;AAEDH,YAAQO,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMR,QAAQS,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCnBYC,eAAAA,eADZ;AAGC,kBAAYhC,MAAZ,EAAoBiC,KAApB,EAA2B3B,IAA3B,EAAiC;AAAA;;AAC/B,WAAKN,MAAL,GAAcA,MAAd;AACA,WAAKiC,KAAL,GAAaA,KAAb;AACA,WAAKC,OAAL,GAAe,MAAf;AACA,WAAK5B,IAAL,GAAYA,IAAZ;AACA,WAAK6B,UAAL,GAAkB,EAAlB;AACA,WAAKC,SAAL,GAAiB,IAAjB;AACD;;mBAEDC,yBAAQ;AAAA;;AACN,aAAO,KAAK/B,IAAL,CAAU+B,KAAV,CAAgB,KAAKC,KAArB,EAA4B,KAAKC,QAAjC,EACJT,IADI,CACC,oBAAY;AAChBU,uBAAeC,OAAf,CAAuB,MAAvB,EAA+BC,KAAKC,SAAL,CAAeC,SAASC,IAAxB,CAA/B;AACA,cAAKV,UAAL,GAAkB,EAAlB;AACA,cAAKnC,MAAL,CAAY8C,QAAZ,CAAqB,MAArB;AACD,OALI,EAMJC,KANI,CAME,iBAAS;AACdC,gBAAQC,GAAR,CAAYC,KAAZ;AACA,cAAKf,UAAL,GAAkB,sBAAlB;AACD,OATI,CAAP;AAUD;;mBAEDgB,uCAAc;AACZ,WAAKN,IAAL,GAAY;AACVO,mBAAW,EADD;AAEVC,kBAAU,EAFA;AAGVf,eAAO,EAHG;AAIVC,kBAAU;AAJA,OAAZ;;AAOA,WAAKe,aAAL,GAAqB,EAArB;AACA,WAAKlB,SAAL,GAAiB,KAAjB;AACD;;mBAEKmB;;;;;;;;uBACuB,KAAKtB,KAAL,CAAWsB,IAAX,CAAgB,KAAKV,IAArB;;;AAAvBW;;AACJ,oBAAI,CAACA,eAAeN,KAApB,EAA2B;AACzB,uBAAKd,SAAL,GAAiB,IAAjB;AACD,iBAFD,MAEO;AACL,uBAAKkB,aAAL,GAAqB,2CAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC3CQG,eAAAA,eADZ;AAEC,kBAAYzD,MAAZ,EAAoBM,IAApB,EAA0BoD,SAA1B,EAAqC;AAAA;;AACnC,WAAKA,SAAL,GAAiBA,SAAjB;AACA,WAAKC,cAAL,GAAsBC,SAAtB;;AAEA,WAAK5D,MAAL,GAAcA,MAAd;AACA,WAAK6D,MAAL,GAAc,2BAAd;AACA,WAAK3B,OAAL,GAAe,uBAAf;AACA,WAAK5B,IAAL,GAAYA,IAAZ;;AAEA,WAAKuC,IAAL,GAAYH,KAAKoB,KAAL,CAAWtB,eAAeuB,OAAf,CAAuB,MAAvB,CAAX,CAAZ;AACA,WAAKC,QAAL,GAAgB,IAAhB;AACA,WAAKC,aAAL,GAAqB,KAArB;;AAEA,WAAKC,KAAL,GAAa,EAAb;;AAEA,WAAKC,UAAL,GAAkB,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,UAA1B,CAAlB;AACD;;mBAEDC,2BAAQ;AACN5B,qBAAe6B,UAAf,CAA0B,MAA1B;AACA,WAAK/D,IAAL,CAAU8D,MAAV;AACD;;mBAEKE;;;;;;;uBACE,KAAKZ,SAAL,CAAea,gBAAf,CAAgC,KAAK1B,IAAL,CAAU2B,GAA1C;;;;;;;;;;;;;;;;;mBAGRC,qDAAqB;AACnB,WAAKR,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACD;;mBAEDS,yCAAe;AACb,WAAKC,UAAL,GAAkB;AAChB9B,cAAM,KAAKA,IAAL,CAAU2B,GADA;AAEhBnE,cAAM,EAFU;AAGhBuE,qBAAa,IAAIC,IAAJ;AAHG,OAAlB;AAKA,WAAKb,QAAL,GAAgB,KAAhB;AACD;;mBAEDc,uBAAO;AACL,WAAKd,QAAL,GAAgB,IAAhB;AACD;;mBAEDe,mCAAYC,SAAQ;AAClB,WAAKL,UAAL,GAAkBK,OAAlB;AACA,WAAKhB,QAAL,GAAgB,KAAhB;AACD;;mBAEDiB,uCAAcD,SAAQ;AACpB,WAAKtB,SAAL,CAAeuB,aAAf,CAA6BD,QAAQR,GAArC;AACD;;mBAEDU,2CAAgBF,SAAQ;AACtBA,cAAQG,SAAR,GAAoB,CAACH,QAAQG,SAA7B;AACA,WAAKR,UAAL,GAAkBK,OAAlB;AACA,WAAKI,WAAL;AACD;;mBAEDC,qCAAa;AACX,WAAKC,aAAL,GAAqB,IAAIC,KAAJ,EAArB;;AAEA,2BAAmB,KAAKrB,KAAxB,kHAA+B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,YAAvBsB,OAAuB;;AAC7B,aAAKF,aAAL,CAAmBG,IAAnB,CAAwBD,OAAxB;AACD;AACF;;mBAEDE,iCAAWC,OAAM;AACf,WAAKL,aAAL,CAAmBM,MAAnB,CAA0BD,KAA1B,EAAgC,CAAhC;AACD;;mBAEDE,mCAAYb,SAAS;AACnB,WAAKrB,cAAL,GAAsBqB,QAAQc,IAA9B;AACD;;mBAEKV;;;;;;;qBACD,KAAKT;;;;;;uBACe,KAAKjB,SAAL,CAAeH,IAAf,CAAoB,KAAKoB,UAAzB;;;AAAjB/B;;qBACDA,SAASM;;;;;AACV6C,sBAAM,yCAAN;;;;;AAEIC,4BAAYpD,SAAS4B;;sBAEtB,KAAKc,aAAL,IAAsB,KAAKA,aAAL,CAAmBW;;;;;;uBACpC,KAAKvC,SAAL,CAAewC,UAAf,CAA0B,KAAKZ,aAA/B,EAA8C,KAAKzC,IAAL,CAAU2B,GAAxD,EAA6DwB,SAA7D;;;AACN,qBAAKV,aAAL,GAAqB,EAArB;;;AAGJ,qBAAKtB,QAAL,GAAgB,IAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;UC/FUhD,YAAAA;AAAT,WAASA,SAAT,CAAmBjB,MAAnB,EAA2B;AAChCA,WAAOoG,eAAP,CAAuB,CACrB,sCADqB,CAAvB;AAGD;;;;;;;;;;;;;;;;;;MCAYC,uBAAAA,uBADZ;AAGC,0BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChB,WAAKC,UAAL,GAAkBD,IAAlB;AACA,WAAKE,QAAL,GAAgB,4BAAhB;;AAEA,WAAKD,UAAL,CAAgBtF,SAAhB,CAA0B,kBAAU;AAClCjB,eACGyG,WADH,CACe,MAAKD,QADpB,EAEGE,YAFH,CAEgB;AACZC,uBAAa,aADD;AAEZC,mBAAS;AACP,sBAAU,kBADH;AAEP,gCAAoB;AAFb;AAFG,SAFhB,EASGC,eATH,CASmB;AACfC,iBADe,mBACPA,QADO,EACE;AACf7D,oBAAQC,GAAR,iBAA0B4D,SAAQC,MAAlC,SAA4CD,SAAQE,GAApD;AACA,mBAAOF,QAAP;AACD,WAJc;AAKfjE,kBALe,oBAKNA,SALM,EAKI;AACjBI,oBAAQC,GAAR,eAAwBL,UAASoE,MAAjC,SAA2CpE,UAASmE,GAApD;AACA,mBAAOnE,SAAP;AACD;AARc,SATnB;AAmBD,OApBD;AAqBD;;2BAEDqE,mBAAIF,KAAK;AACP,aAAO,KAAKT,UAAL,CAAgBY,KAAhB,CAAsBH,GAAtB,EACJjF,IADI,CACC;AAAA,eAAYc,SAASuE,IAAT,EAAZ;AAAA,OADD,EAEJrF,IAFI,CAEC,gBAAQ;AACZ,eAAOsF,IAAP;AACD,OAJI,EAKJrE,KALI,CAKE,iBAAS;AACd,eAAOG,KAAP;AACD,OAPI,CAAP;AAQD;;2BAEDmE,qBAAKC,SAASP,KAAK;AACjB,aAAO,KAAKT,UAAL,CACJY,KADI,CACEH,GADF,EACO;AACVD,gBAAQ,MADE;AAEVS,cAAM,8BAAKD,OAAL;AAFI,OADP,EAKJxF,IALI,CAKC;AAAA,eAAYc,SAASuE,IAAT,EAAZ;AAAA,OALD,EAMJrF,IANI,CAMC,kBAAU;AACd,eAAO0F,MAAP;AACD,OARI,EASJzE,KATI,CASE,iBAAS;AACd,eAAOG,KAAP;AACD,OAXI,CAAP;AAYD;;2BAEDuE,mBAAIH,SAASP,KAAK;AAChB,aAAO,KAAKT,UAAL,CACJY,KADI,CACEH,GADF,EACO;AACVD,gBAAQ,KADE;AAEVS,cAAM,8BAAKD,OAAL;AAFI,OADP,EAKJxF,IALI,CAKC;AAAA,eAAYc,SAASuE,IAAT,EAAZ;AAAA,OALD,EAMJrF,IANI,CAMC,kBAAU;AACd,eAAO0F,MAAP;AACD,OARI,EASJzE,KATI,CASE,iBAAS;AACd,eAAOG,KAAP;AACD,OAXI,CAAP;AAYD;;2BAEDwE,0BAAOX,KAAK;AACV,aAAO,KAAKT,UAAL,CACJY,KADI,CACEH,GADF,EACO;AACVD,gBAAQ;AADE,OADP,EAIJhF,IAJI,CAIC;AAAA,eAAYc,SAASuE,IAAT,EAAZ;AAAA,OAJD,EAKJrF,IALI,CAKC,kBAAU;AACd,eAAO0F,MAAP;AACD,OAPI,EAQJzE,KARI,CAQE,iBAAS;AACd,eAAOG,KAAP;AACD,OAVI,CAAP;AAWD;;2BAEDyE,mCAAYzD,OAAO6C,KAAI;AACrB,aAAO,KAAKT,UAAL,CACJY,KADI,CACEH,GADF,EACO;AACVD,gBAAQ,MADE;AAEVS,cAAMrD;AAFI,OADP,EAKJpC,IALI,CAKC;AAAA,eAAYc,SAASuE,IAAT,EAAZ;AAAA,OALD,EAMJrF,IANI,CAMC,kBAAU;AACd,eAAO0F,MAAP;AACD,OARI,EASJzE,KATI,CASE,iBAAS;AACd,eAAOG,KAAP;AACD,OAXI,CAAP;AAYD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCjGU0E,oBAAAA,oBADZ;AAGC,uBAAYR,IAAZ,EAAkB;AAAA;;AAChB,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKS,iBAAL,GAAyB,WAAzB;;AAEA,WAAKC,cAAL,GAAsB,EAAtB;AACD;;wBAEKvD;4EAAiBwD;;;;;;;uBACA,KAAKX,IAAL,CAAUH,GAAV,CAAc,KAAKY,iBAAL,GAAyB,QAAzB,GAAoCE,EAAlD;;;AAAjBnF;;AACJ,oBAAG,CAACA,SAASM,KAAV,IAAmB,CAACN,SAASV,OAAhC,EAAwC;AACtC,uBAAK4F,cAAL,GAAsBlF,QAAtB;AACD;;;;;;;;;;;;;;;;;wBAGGW;8EAAKyB;;;;;;;qBACLA;;;;;oBACGA,QAAQR;;;;;;uBACU,KAAK4C,IAAL,CAAUC,IAAV,CAAerC,OAAf,EAAwB,KAAK6C,iBAA7B;;;AAAjBjF;;AACJ,oBAAI,CAACA,SAASM,KAAd,EAAqB;AACnB,uBAAK4E,cAAL,CAAoBrC,IAApB,CAAyB7C,QAAzB;AACD;kDACMA;;;;uBAEc,KAAKwE,IAAL,CAAUK,GAAV,CAAczC,OAAd,EAAuB,KAAK6C,iBAAL,GAAyB,GAAzB,GAA+B7C,QAAQR,GAA9D;;;AAAjB5B;;AACJ,oBAAI,CAACA,UAASM,KAAd,EAAqB,CAEpB;kDACMN;;;;;;;;;;;;;;;;;wBAKPqC;8EAAc8C;;;;;;;uBACG,KAAKX,IAAL,CAAUM,MAAV,CAAiB,KAAKG,iBAAL,GAAyB,GAAzB,GAA+BE,EAAhD;;;AAAjBnF;;AACJ,oBAAG,CAACA,SAASM,KAAb,EAAmB;AACjB,uBAAQ8E,CAAR,GAAY,CAAZ,EAAeA,IAAI,KAAKF,cAAL,CAAoB7B,MAAvC,EAA+C+B,GAA/C,EAAmD;AACjD,wBAAG,KAAKF,cAAL,CAAoBE,CAApB,EAAuBxD,GAAvB,KAA+BuD,EAAlC,EAAqC;AACnC,2BAAKD,cAAL,CAAoBlC,MAApB,CAA2BoC,CAA3B,EAA6B,CAA7B;AACD;AACF;AACF;;;;;;;;;;;;;;;;;wBAGG9B;8EAAWhC,OAAO+D,QAAQjC;;;;;;AAC1BkC,2BAAW,IAAIC,QAAJ;;;AAEfjE,sBAAMkE,OAAN,CAAc,UAACC,IAAD,EAAO1C,KAAP,EAAiB;AAC7BuC,2BAASI,MAAT,CAAgB,SAAS3C,KAAzB,EAAgC0C,IAAhC;AACD,iBAFD;;;uBAIqB,KAAKjB,IAAL,CAAUO,WAAV,CAAsBO,QAAtB,EAAgC,KAAKL,iBAAL,GAAyB,UAAzB,GAAsCI,MAAtC,GAA+C,GAA/C,GAAqDjC,SAArF;;;AAAjBpD;kDACGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCrDE2F,gBAAAA,gBADZ;AAEC,mBAAYnB,IAAZ,EAAkB;AAAA;;AAChB,WAAKA,IAAL,GAAYA,IAAZ;AACA,WAAKoB,YAAL,GAAoB,OAApB;AACD;;oBAEKjF;4EAAKyB;;;;;;qBACNA;;;;;;uBAC0B,KAAKoC,IAAL,CAAUC,IAAV,CAAexE,IAAf,EAAqB,KAAKgF,iBAA1B;;;AAAvBrE;iDACGA;;;;;;;;;;;;;;;;;oBAILD;8EAAKV;;;;;;qBACNA;;;;;;uBAC0B,KAAKuE,IAAL,CAAUC,IAAV,CAAexE,IAAf,EAAqB,KAAK2F,YAA1B;;;AAAvBhF;kDACGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCpBAiF,kCAAAA;;;;;sCACXC,yBAAOC,OAAOC,OAAO;AACnB,UAAG,CAACA,KAAJ,EAAU;AACR,eAAOD,MAAME,MAAN,CAAa,gBAAQ;AAC1B,iBAAO,CAACR,KAAKlD,SAAb;AACD,SAFM,CAAP;AAGD,OAJD,MAIO;AACL,eAAOwD,KAAP;AACD;AACF","file":"app-bundle.js","sourcesContent":["import { AuthorizeStep } from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep);\n    config.map([\n      {\n        route: ['', 'home'],\n        moduleId: './modules/home',\n        name: 'Home'\n      },\n      {\n        route: 'list',\n        moduleId: './modules/list',\n        name: 'List',\n        auth: true\n      }\n    ]);\n  }\n}\n","var authConfig = {\n  baseUrl: \"http://127.0.0.1:5000/api\",\n  loginUrl: '/users/login',\n  tokenName: 'token',\n  authHeader: 'Authorization',\n  authToken: '',\n  logoutRedirect: '#/home'\n};\n\nexport default authConfig;\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({  warnings: {    wForgottenReturn: false  }});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n    })\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport { Users } from '../resources/data/users';\nimport { AuthService } from 'aurelia-auth';\n\n\n@inject(Router, Users, AuthService)\nexport class Home {\n\n  constructor(router, users, auth) {\n    this.router = router;\n    this.users = users;\n    this.message = 'Home';\n    this.auth = auth;\n    this.loginError = '';\n    this.showLogin = true;\n  }\n\n  login() {\n    return this.auth.login(this.email, this.password)\n      .then(response => {\n        sessionStorage.setItem(\"user\", JSON.stringify(response.user));\n        this.loginError = \"\";\n        this.router.navigate('list');\n      })\n      .catch(error => {\n        console.log(error);\n        this.loginError = \"Invalid credentials.\";\n      });\n  };\n\n  showRegister(){\n    this.user = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    this.registerError = \"\";\n    this.showLogin = false;\n  }\n\n  async save() {\n    let serverResponse = await this.users.save(this.user);\n    if (!serverResponse.error) {\n      this.showLogin = true;\n    } else {\n      this.registerError = \"There was a problem registering the user.\"\n    }\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {Galleries} from '../resources/data/galleries';\nimport {AuthService} from 'aurelia-auth';\n\n@inject(Router, AuthService, Galleries)\nexport class List {\n  constructor(router, auth, galleries) {\n    this.galleries = galleries;\n    this.currentGallery = undefined; // undefined for init message\n\n    this.router = router;\n    this.apiUrl = \"http://127.0.0.1:5000/api\";\n    this.message = 'MyPics Gallery Viewer';\n    this.auth = auth;\n\n    this.user = JSON.parse(sessionStorage.getItem('user'));\n    this.showList = true;\n    this.showCompleted = false;\n\n    this.files = [];\n\n    this.priorities = ['Low', 'Medium', 'High', 'Critical'];\n  }\n\n  logout(){\n    sessionStorage.removeItem('user');\n    this.auth.logout();\n  }\n\n  async activate() {\n    await this.galleries.getUserGalleries(this.user._id);\n  }\n\n  toggleShowCompleted(){\n    this.showCompleted = !this.showCompleted;\n  }\n\n  createGallery(){\n    this.galleryObj = {\n      user: this.user._id,\n      name: \"\",\n      dateCreated: new Date()\n    };\n    this.showList = false;\n  }\n\n  back() {\n    this.showList = true;\n  }\n\n  editGallery(gallery){\n    this.galleryObj = gallery;\n    this.showList = false;\n  }\n\n  deleteGallery(gallery){\n    this.galleries.deleteGallery(gallery._id);\n  }\n\n  completeGallery(gallery){\n    gallery.completed = !gallery.completed;\n    this.galleryObj = gallery;\n    this.saveGallery();\n  }\n\n  changeFiles(){\n    this.filesToUpload = new Array();\n\n    for(let picture of this.files) {\n      this.filesToUpload.push(picture);\n    }\n  }\n\n  removeFile(index){\n    this.filesToUpload.splice(index,1);\n  }\n\n  showGallery(gallery) {\n    this.currentGallery = gallery.file;\n  }\n\n  async saveGallery(){\n    if(this.galleryObj){\n      let response = await this.galleries.save(this.galleryObj);\n      if(response.error){\n        alert(\"There was an error creating the Gallery\");\n      } else {\n        var galleryId = response._id;\n\n        if(this.filesToUpload && this.filesToUpload.length){\n          await this.galleries.uploadFile(this.filesToUpload, this.user._id, galleryId);\n          this.filesToUpload = [];\n        }\n      }\n      this.showList = true;\n    }\n  }\n}\n","export function configure(config) {\n  config.globalResources([\n    'resources/value-converters/completed'\n  ]);\n}\n","import { inject } from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\n@inject(HttpClient)\nexport class DataServices {\n\n  constructor(http) {\n    this.httpClient = http;\n    this.BASE_URL = \"http://127.0.0.1:5000/api/\";\n\n    this.httpClient.configure(config => {\n      config\n        .withBaseUrl(this.BASE_URL)\n        .withDefaults({\n          credentials: 'same-origin',\n          headers: {\n            'Accept': 'application/json',\n            'X-Requested-With': 'Fetch'\n          }\n        })\n        .withInterceptor({\n          request(request) {\n            console.log(`Requesting ${request.method} ${request.url}`);\n            return request;\n          },\n          response(response) {\n            console.log(`Received ${response.status} ${response.url}`);\n            return response;\n          }\n        });\n    });\n  }\n\n  get(url) {\n    return this.httpClient.fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        return error;\n      });\n  }\n\n  post(content, url) {\n    return this.httpClient\n      .fetch(url, {\n        method: 'post',\n        body: json(content)\n      })\n      .then(response => response.json())\n      .then(object => {\n        return object;\n      })\n      .catch(error => {\n        return error;\n      });\n  }\n\n  put(content, url) {\n    return this.httpClient\n      .fetch(url, {\n        method: 'put',\n        body: json(content)\n      })\n      .then(response => response.json())\n      .then(object => {\n        return object;\n      })\n      .catch(error => {\n        return error;\n      });\n  }\n\n  delete(url) {\n    return this.httpClient\n      .fetch(url, {\n        method: 'delete'\n      })\n      .then(response => response.json())\n      .then(object => {\n        return object;\n      })\n      .catch(error => {\n        return error ;\n      });\n  }\n\n  uploadFiles(files, url){\n    return this.httpClient\n      .fetch(url, {\n        method: 'post',\n        body: files\n      })\n      .then(response => response.json())\n      .then(object => {\n        return object;\n      })\n      .catch(error => {\n        return error;\n      });\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n\n@inject(DataServices)\nexport class Galleries {\n\n  constructor(data) {\n    this.data = data;\n    this.GALLERIES_SERVICE = 'galleries';\n\n    this.galleriesArray = [];\n  }\n\n  async getUserGalleries(id){\n    let response = await this.data.get(this.GALLERIES_SERVICE + \"/user/\" + id);\n    if(!response.error && !response.message){\n      this.galleriesArray = response;\n    }\n  }\n\n  async save(gallery) {\n    if (gallery) {\n      if (!gallery._id) {\n        let response = await this.data.post(gallery, this.GALLERIES_SERVICE);\n        if (!response.error) {\n          this.galleriesArray.push(response);\n        }\n        return response;\n      } else {\n        let response = await this.data.put(gallery, this.GALLERIES_SERVICE + \"/\" + gallery._id);\n        if (!response.error) {\n          // this.updateArray(response);\n        }\n        return response;\n      }\n    }\n  }\n\n  async deleteGallery(id){\n    let response = await this.data.delete(this.GALLERIES_SERVICE + \"/\" + id);\n    if(!response.error){\n      for(let i = 0; i < this.galleriesArray.length; i++){\n        if(this.galleriesArray[i]._id === id){\n          this.galleriesArray.splice(i,1);\n        }\n      }\n    }\n  }\n\n  async uploadFile(files, userId, galleryId){\n    let formData = new FormData();\n\n    files.forEach((item, index) => {\n      formData.append(\"file\" + index, item);\n    });\n\n    let response = await this.data.uploadFiles(formData, this.GALLERIES_SERVICE + \"/upload/\" + userId + \"/\" + galleryId);\n    return response;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n\n@inject(DataServices)\nexport class Users {\n  constructor(data) {\n    this.data = data;\n    this.USER_SERVICE = 'users';\n  }\n\n  async save(gallery){\n    if(gallery){\n      let serverResponse = await this.data.post(user, this.GALLERIES_SERVICE);\n      return serverResponse;\n    }\n  }\n\n  async save(user){\n    if(user){\n      let serverResponse = await this.data.post(user, this.USER_SERVICE);\n      return serverResponse;\n    }\n  }\n}\n","export class CompletedValueConverter {\n  toView(array, value) {\n    if(!value){\n      return array.filter(item => {\n        return !item.completed;\n      })\n    } else {\n      return array;\n    }\n  }\n}\n"],"sourceRoot":".."}